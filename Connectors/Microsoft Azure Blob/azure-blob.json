{
    "enabled": false,
    "name": "Microsoft Azure Blob",
    "description": "Read & write files to Azure Blob Storage",
    "logoUrl": "/assets/img/connectors/azure.blob.png",
    "category": "Cloud Storage",
    "externalDocs": "http://externalDocs.com/",
    "resources": {
        "type": "azure.blob",
        "read": {
            "container": "$readContainer",
            "blobPrefix": "$readFilePath",
            "fileNameRegex": "$readFileNameRegex",
            "moveAfterIngest": "$moveAfterIngest",
            "format": "$readFormat"
        },
        "write": {
            "container": "$writeContainer",
            "blobPrefix": "$writeFilePath",
            "fileName": "$writeFileName",
            "format": "$writeFormat"
        }
    },
    "type": "CloudStorage",
    "configSchema": {
        "type": "object",
        "additionalProperties": false,
        "required": [
            "readContainer",
            "writeContainer"
        ],
        "properties": {
            "readContainer": {
                "type": "string",
                "title": "Read Container",
                "description": "The name of the container in the account from which to extract the data.",
                "scopes": [
                    "application"
                ]
            },
            "writeContainer": {
                "type": "string",
                "title": "Write Container",
                "description": "The name of the container in the account to which the data will be uploaded.",
                "scopes": [
                    "application"
                ]
            },
            "readFilePath": {
                "type": "string",
                "title": "Read File Path",
                "description": "If this parameter is specified, only blobs whose names begin with this prefix will be extracted.",
                "scopes": [
                    "application",
                    "event"
                ]
            },
            "writeFilePath": {
                "type": "string",
                "title": "Write File Path",
                "description": "The prefix to use for the blob names. Specify a prefix such as 'destination/' to create a virtual folder hierarchy.",
                "scopes": [
                    "application",
                    "action",
                    "audience-action"
                ]
            },
            "readFileNameRegex": {
                "type": "string",
                "title": "Filename Regex",
                "description": "A regular expression (regex) applied for filtering files by name.",
                "scopes": [
                    "application",
                    "event"
                ]
            },
            "writeFileName": {
                "type": "string",
                "title": "Filename To Write",
                "description": "The format of the name of the file created. The name can include a fixed string or placeholders, denoted by a dollar sign '$' followed by curly brackets: ${variableName}. A range of different time stamp formats are supported. Time stamp conventions (e.g., YYYY) are also supported. now (the current time when the export job was started ); now-xD (the current time when the export job was started , minus 'x' number of days) now+xD (the current time when the export job was started , plus 'x' number of days); now+xD:yyMMdd; unix",
                "scopes": [
                    "application",
                    "action",
                    "audience-action"
                ]
            },
            "writeFormat": {
                "type": "object",
                "title": "File Format To Write",
                "properties": {
                    "format": {
                        "type": "string",
                        "title": "Format",
                        "enum": [
                            "csv",
                            "json"
                        ],
                        "scopes": [
                            "application",
                            "action"
                        ]
                    },
                    "fieldDelimiter": {
                        "type": "string",
                        "title": "Field Delimiter",
                        "scopes": [
                            "application",
                            "action"
                        ],
                        "widget": {
                            "formlyConfig": {
                                "hideExpression": "!model || (model && model.format !== 'csv')"
                            }
                        }
                    },
                    "recordDelimiter": {
                        "type": "string",
                        "title": "Record Delimiter",
                        "scopes": [
                            "application",
                            "action"
                        ],
                        "widget": {
                            "formlyConfig": {
                                "hideExpression": "!model || (model && model.format !== 'csv')"
                            }
                        }
                    }
                },
                "scopes": [
                    "application",
                    "action"
                ],
                "if": {
                    "properties": {
                        "format": {
                            "enum": [
                                "csv"
                            ]
                        }
                    },
                    "required": [
                        "format"
                    ]
                },
                "then": {
                    "required": [
                        "fieldDelimiter",
                        "recordDelimiter"
                    ]
                }
            },
            "readFormat": {
                "type": "object",
                "title": "File Format To Read",
                "properties": {
                    "format": {
                        "type": "string",
                        "title": "Format",
                        "enum": [
                            "csv",
                            "json"
                        ],
                        "scopes": [
                            "application",
                            "event"
                        ]
                    },
                    "fieldDelimiter": {
                        "type": "string",
                        "title": "Field Delimiter",
                        "scopes": [
                            "application",
                            "event"
                        ],
                        "widget": {
                            "formlyConfig": {
                                "hideExpression": "!model || (model && model.format !== 'csv')"
                            }
                        }
                    },
                    "recordDelimiter": {
                        "type": "string",
                        "title": "Record Delimiter",
                        "scopes": [
                            "application",
                            "event"
                        ],
                        "widget": {
                            "formlyConfig": {
                                "hideExpression": "!model || (model && model.format !== 'csv')"
                            }
                        }
                    }
                },
                "scopes": [
                    "application",
                    "event"
                ],
                "if": {
                    "properties": {
                        "format": {
                            "enum": [
                                "csv"
                            ]
                        }
                    },
                    "required": [
                        "format"
                    ]
                },
                "then": {
                    "required": [
                        "fieldDelimiter",
                        "recordDelimiter"
                    ]
                }
            },
            "moveAfterIngest": {
                "type": "object",
                "title": "Move After Ingest",
                "description": "When set to \"true\", ingested files will be moved to the specified folder. To support this, you must specify the folder name, and also the read file path. The folder will be created as a sibling of the read file path. In addition, make sure your token supports both read and write permissions",
                "properties": {
                    "moveFilesAfterIngest": {
                        "type": "boolean",
                        "enum": [
                            true,
                            false
                        ],
                        "scopes": [
                            "application",
                            "event"
                        ]
                    },
                    "folderToMove": {
                        "type": "string",
                        "title": "Destination Folder For Ingested Files",
                        "description": "A directory to which ingsted files will be moved after being they are done being read",
                        "scopes": [
                            "application",
                            "event"
                        ],
                        "widget": {
                            "formlyConfig": {
                                "hideExpression": "!model || (model && model.moveFilesAfterIngest !== true)"
                            }
                        }
                    }
                },
                "scopes": [
                    "application",
                    "event"
                ],
                "if": {
                    "properties": {
                        "moveFilesAfterIngest": {
                            "enum": [
                                "true"
                            ]
                        }
                    },
                    "required": [
                        "moveFilesAfterIngest"
                    ]
                },
                "then": {
                    "required": [
                        "folderToMove"
                    ]
                }
            }
        },
        "if": {
            "type": "object",
            "properties": {
                "moveAfterIngest": {
                    "properties": {
                        "moveFilesAfterIngest": {
                            "const": true
                        }
                    }
                }
            }
        },
        "then": {
            "required": [
                "readFilePath"
            ],
            "properties": {
                "readFilePath": {
                    "pattern": "^.+\/.*$"
                }
            }
        }
    },
    "securitySchemes": {
        "keys": {
            "type": "object",
            "allowAdditionalProperties": false,
            "required": [
                "accountName",
                "accountKey"
            ],
            "properties": {
                "accountName": {
                    "title": "Account Name",
                    "description": "The name of the Azure account.",
                    "type": "string"
                },
                "accountKey": {
                    "title": "Account Key",
                    "description": "The Azure account key.",
                    "type": "string"
                }
            }
        }
    },
    "version": "1.0.0.0"
}
