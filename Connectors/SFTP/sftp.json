{
    "enabled": false,
    "name": "SFTP",
    "description": "Read & write files via Secure File Transfer Protocol",
    "logoUrl": "https://cdpconnectorsintegration.blob.core.windows.net/uploads/ftp.svg",
    "category": "Cloud Storage",
    "resources": {
        "type": "sftp",
        "read": {
            "host": "$host",
            "port": "$port",
            "sortOrder": "$sortOrder",
            "sortBy": "$sortBy",
            "timeout": "$timeout",
            "fileNameRegex": "$readFileNameRegex",
            "remotePath": "$readFilePath",
            "moveAfterIngest": "$moveAfterIngest",
            "format": "$readFormat"
        },
        "write": {
            "host": "$host",
            "port": "$port",
            "timeout": "$timeout",
            "remotePath": "$writeFilePath",
            "temporaryUploadExtension": "$temporaryUploadExtension",
            "fileName": "$writeFileName",
            "format": "$writeFormat"
        }
    },
    "type": "CloudStorage",
    "configSchema": {
        "type": "object",
        "additionalProperties": false,
        "required": [
            "host",
            "port"
        ],
        "properties": {
            "host": {
                "type": "string",
                "title": "Host",
                "description": "The remote SFTP host.",
                "scopes": [
                    "application"
                ]
            },
            "readFilePath": {
                "type": "string",
                "title": "Read Remote Path",
                "description": "The remote SFTP directory to fetch files from.",
                "scopes": [
                    "application",
                    "event"
                ]
            },
            "writeFilePath": {
                "type": "string",
                "title": "Write Remote Path",
                "description": "The remote SFTP directory to store files at.",
                "scopes": [
                    "application",
                    "action",
                    "audience-action"
                ]
            },
            "readFileNameRegex": {
                "type": "string",
                "title": "Filename Regex",
                "description": "A regular expression to apply for file filtering.",
                "scopes": [
                    "application",
                    "event"
                ]
            },
            "port": {
                "type": "integer",
                "title": "Port",
                "description": "The remote SFTP port.",
                "default": 22,
                "scopes": [
                    "application"
                ]
            },
            "timeout": {
                "type": "integer",
                "title": "Timeout",
                "description": "The timeout (in seconds) to wait for a response from SFTP. The acceptable range is 10-120.",
                "default": 60,
                "scopes": [
                    "application"
                ]
            },
            "sortBy": {
                "type": "string",
                "title": "Sort By",
                "description": "The field by which to sort the data.",
                "default": "time",
                "scopes": [
                    "application",
                    "event"
                ]
            },
            "sortOrder": {
                "type": "string",
                "title": "Sort Order",
                "description": "The sort order: ASC: ascending (this is the default) DESC: descending",
                "default": "ASC",
                "scopes": [
                    "application",
                    "event"
                ]
            },
            "temporaryUploadExtension": {
                "type": "string",
                "title": "Temporary Upload Extension",
                "description": "Set to 'true' to append the extension '.uploading' to the file name while it is being uploaded. This extension will be removed when the uploading process is finished.",
                "default": "false",
                "scopes": [
                    "application"
                ]
            },
            "writeFileName": {
                "type": "string",
                "title": "Filename To Write",
                "description": "The format of the name of the file created. The name can include a fixed string or placeholders, denoted by a dollar sign '$' followed by curly brackets: ${variableName}. A range of different time stamp formats are supported. Time stamp conventions (e.g., YYYY) are also supported. now (the current time when the export job was started ); now-xD (the current time when the export job was started , minus 'x' number of days) now+xD (the current time when the export job was started , plus 'x' number of days); now+xD:yyMMdd; unix",
                "scopes": [
                    "application",
                    "action",
                    "audience-action"
                ]
            },
            "writeFormat": {
                "type": "object",
                "title": "File Format To Write",
                "properties": {
                    "format": {
                        "type": "string",
                        "title": "Format",
                        "enum": [
                            "csv",
                            "json"
                        ],
                        "scopes": [
                            "application",
                            "action"
                        ]
                    },
                    "fieldDelimiter": {
                        "type": "string",
                        "title": "Field Delimiter",
                        "scopes": [
                            "application",
                            "action"
                        ],
                        "widget": {
                            "formlyConfig": {
                                "hideExpression": "!model || (model && model.format !== 'csv')"
                            }
                        }
                    },
                    "recordDelimiter": {
                        "type": "string",
                        "title": "Record Delimiter",
                        "scopes": [
                            "application",
                            "action"
                        ],
                        "widget": {
                            "formlyConfig": {
                                "hideExpression": "!model || (model && model.format !== 'csv')"
                            }
                        }
                    }
                },
                "scopes": [
                    "application",
                    "action"
                ],
                "if": {
                    "properties": {
                        "format": {
                            "enum": [
                                "csv"
                            ]
                        }
                    },
                    "required": [
                        "format"
                    ]
                },
                "then": {
                    "required": [
                        "fieldDelimiter",
                        "recordDelimiter"
                    ]
                }
            },
            "readFormat": {
                "type": "object",
                "title": "File Format To Read",
                "properties": {
                    "format": {
                        "type": "string",
                        "title": "Format",
                        "enum": [
                            "csv",
                            "json"
                        ],
                        "scopes": [
                            "application",
                            "event"
                        ]
                    },
                    "fieldDelimiter": {
                        "type": "string",
                        "title": "Field Delimiter",
                        "scopes": [
                            "application",
                            "event"
                        ],
                        "widget": {
                            "formlyConfig": {
                                "hideExpression": "!model || (model && model.format !== 'csv')"
                            }
                        }
                    },
                    "recordDelimiter": {
                        "type": "string",
                        "title": "Record Delimiter",
                        "scopes": [
                            "application",
                            "event"
                        ],
                        "widget": {
                            "formlyConfig": {
                                "hideExpression": "!model || (model && model.format !== 'csv')"
                            }
                        }
                    }
                },
                "scopes": [
                    "application",
                    "event"
                ],
                "if": {
                    "properties": {
                        "format": {
                            "enum": [
                                "csv"
                            ]
                        }
                    },
                    "required": [
                        "format"
                    ]
                },
                "then": {
                    "required": [
                        "fieldDelimiter",
                        "recordDelimiter"
                    ]
                }
            },
            "moveAfterIngest": {
                "type": "object",
                "title": "Move After Ingest",
                "description": "When set to \"true\", ingested files will be moved to the specified folder. To support this, you must specify the folder name, and also the read file path. The folder will be created as a sibling of the read file path. In addition, make sure your token supports both read and write permissions",
                "properties": {
                    "moveFilesAfterIngest": {
                        "type": "boolean",
                        "enum": [
                            true,
                            false
                        ],
                        "scopes": [
                            "application",
                            "event"
                        ]
                    },
                    "folderToMove": {
                        "type": "string",
                        "title": "Destination Folder For Ingested Files",
                        "description": "A directory to which ingsted files will be moved after being they are done being read",
                        "scopes": [
                            "application",
                            "event"
                        ],
                        "widget": {
                            "formlyConfig": {
                                "hideExpression": "!model || (model && model.moveFilesAfterIngest !== true)"
                            }
                        }
                    }
                },
                "scopes": [
                    "application",
                    "event"
                ],
                "if": {
                    "properties": {
                        "moveFilesAfterIngest": {
                            "enum": [
                                "true"
                            ]
                        }
                    },
                    "required": [
                        "moveFilesAfterIngest"
                    ]
                },
                "then": {
                    "required": [
                        "folderToMove"
                    ]
                }
            }
        },
        "if": {
            "type": "object",
            "properties": {
                "moveAfterIngest": {
                    "properties": {
                        "moveFilesAfterIngest": {
                            "const": true
                        }
                    }
                }
            }
        },
        "then": {
            "required": [
                "readFilePath"
            ],
            "properties": {
                "readFilePath": {
                    "pattern": "^.+\/.*$"
                }
            }
        }
    },
    "securitySchemes": {
        "password": {
            "type": "object",
            "allowAdditionalProperties": false,
            "required": [
                "username",
                "password"
            ],
            "properties": {
                "username": {
                    "type": "string",
                    "title": "Username",
                    "description": "The remote SFTP username."
                },
                "password": {
                    "type": "string",
                    "title": "Password",
                    "description": "The remote SFTP password."
                }
            }
        },
        "privateKey": {
            "type": "object",
            "allowAdditionalProperties": false,
            "required": [
                "username",
                "privateKey"
            ],
            "properties": {
                "username": {
                    "type": "string",
                    "title": "Username",
                    "description": "The remote SFTP username."
                },
                "privateKey": {
                    "type": "string",
                    "title": "Private Key",
                    "description": "The base64 private key to use upon ssh keys authentication."
                },
                "passphrase": {
                    "type": "string",
                    "title": "Passphrase",
                    "description": "The private key passphrase."
                }
            }
        }
    },
    "version": "1.0.0.0"
}
